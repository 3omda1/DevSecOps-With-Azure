trigger:
- main
#- azure-pipelines

pool:
  vmImage: ubuntu-latest

variables:
- group: "SECURE_TOKENS"
- name: SONAR_TOKEN
  value: $[variables.SONAR_TOKEN]

  
stages:
  - stage: Lint
    jobs:
      - job: Lint_Code
        steps:
          - script: |
              echo "Lintinggg ..."
              ./gradlew check
            displayName: 'Code validation using Gradle'

  - stage: UnitTest
    jobs:
      - job: Run_Unit_Tests
        steps:
          - script: |
              echo "Running unit testing"
              ./gradlew test
            displayName: 'Code testing using Gradle'
            
  - stage: SonarQube
    jobs:
      - job: Sonar_SAST_Scan_Job
        container: openjdk:18-jdk-slim
        steps:
          - checkout: self 
          - script: |
              echo "Running Jacoco testing"
              export SONAR_TOKEN=$(SONAR_TOKEN)
              ./gradlew test jacocoTestReport sonar 
            displayName: 'Integrate SAST using SonarCloud to populate code coverage'
            env:
              SONAR_TOKEN: $(SONAR_TOKEN) 
  - stage: BuildingPushing
    jobs:
      - job: Build_Push_Docker_Image
        steps:
        - task: Docker@2
          inputs:
            containerRegistry: 'docker-conn'
            repository: 'ahmedemad111/bank-misr'
            command: 'buildAndPush'
            Dockerfile: '**/Dockerfile'
  - stage: Deploy2Kubernetes
    jobs:
      - job: Deploy_to_development_namespace
        steps:
        - task: KubernetesManifest@1
          inputs:
            action: 'deploy'
            connectionType: 'kubernetesServiceConnection'
            kubernetesServiceConnection: 'eks-conn'
            namespace: 'development'
            manifests: 'K8s-deployment.yaml'
  - stage: OWASP
    jobs:
      - job: ZAP_DAST_Scan_Job
        steps:
        - script: |
            wget https://github.com/zaproxy/zaproxy/releases/download/v2.16.0/ZAP_2.16.0_Linux.tar.gz
            tar -xvf ZAP_2.16.0_Linux.tar.gz
            cd ZAP_2.16.0
            ./zap.sh -cmd -quickurl https://www.example.com -quickprogress -quickout /home/vsts/work/1/a/zap_report.html 
          displayName: "Integrate DAST using OWASP ZAP in ADO DevSecOps Pipeline"

        - task: PublishBuildArtifacts@1
          inputs:
            pathToPublish: '$(Build.ArtifactStagingDirectory)'
            artifactName: zap_report.html
